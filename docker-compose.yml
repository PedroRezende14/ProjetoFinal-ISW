services:
  rabbit:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=1234
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3

  web:
    build: ./app
    ports:
      - "5000:5000"
    volumes:
      - ./app:/app
    depends_on:
      rabbit:
        condition: service_healthy
      postgres:
        condition: service_healthy
      mongo:
        condition: service_started

  consumer:
    build: ./consumer
    volumes:
      - ./consumer:/app
    working_dir: /app
    command: python consumer.py
    depends_on:
      rabbit:
        condition: service_healthy
      postgres:
        condition: service_healthy
      mongo:
        condition: service_started
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: appdb
    ports:
      - "5432:5432"
    volumes:
      - ./bd/postgres:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d appdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:6.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: appdb
    ports:
      - "27017:27017"
    volumes:
      - ./bd/mongo:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d

  nginx:
    image: nginx:alpine
    ports:
      - "9090:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./app/static:/usr/share/nginx/html:ro
    depends_on:
      - web